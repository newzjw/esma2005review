// 1.变量i是var命令声明的，在全局范围内都有效，所以全局只有一个变量i。每一次循环，变量i的值都会发生改变，而循环内被赋给数组a的函数内部的console.log(i)，里面的i指向的就是全局的i。也就是说，所有数组a的成员里面的i，指向的都是同一个i，导致运行时输出的是最后一轮的i的值，也就是 10。
const arr1 = []
for (var i = 0; i < 10; i++) {
  arr1[i] = () => console.log(i)
  arr1[i]() // 0 1 2 3 4 5 6 7 8 9
}
arr1[6]() // 10
// 变量i是let声明的，当前的i只在本轮循环有效，所以每一次循环的i其实都是一个新的变量，所以最后输出的是6
const arr2 = []
for (let i = 0; i < 10; i++) {
  arr2[i] = () => console.log(i)
  arr2[i]() // 0 1 2 3 4 5 6 7 8 9
}
arr2[6]() // 6

// 2.暂时性死区
// 如果区块中存在let和const命令，这个区块对这些命令声明的变量，从一开始就形成了封闭作用域。凡是在声明之前就使用这些变量，就会报错。
var tmp = 123
if (true) {
  // tmp = 'abc'; // ReferenceError
  let tmp
}
